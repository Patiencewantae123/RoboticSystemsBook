[
    { "type":"multiple-choice",
      "prompt":"For a 6R robot and a task space denoting the 3D world coordinates of the robot's end effector point, what is the size of the Jacobian matrix?",
      "options":["3 x 6","6 x 3","6 x 6","3 x 3"],
      "answer":0,
      "feedback":[null,
            "Recall that the number of rows is equal to the workspace dimension, while the number of columns is equal to the configuration-space dimension",
            "Recall that the number of rows is equal to the workspace dimension, while the number of columns is equal to the configuration-space dimension",
            "Recall that the number of rows is equal to the workspace dimension, while the number of columns is equal to the configuration-space dimension"]
    },
    { "type":"multiple-choice",
      "prompt":"For any 6R robot and a task space denoting the 3D world coordinates of the origin of the robot's 5th link, which entries of the Jacobian matrix are 0 at any configuration?",
      "options":["The 5th and 6th columns","The 5th column","The 6th column","The 6th row","All of them"],
      "displayed":4,
      "answer":0,
      "feedback":[null,
            "Does the 6th degree of freedom affect the origin of the 5th link?",
            "Recall that the task space is at the origin of the 5th link, and that by convention the 5th joint lies at the origin too",
            null,
            null]
    },
    { "type":"multiple-choice",
      "prompt":"What can be said about the size $m x n$ of a Jacobian matrix?",
      "options":["$n$ is the number of task space degrees of freedom, and is therefore variable",
        "$n$ is the number of robot degrees of freedom. ",
        "$m=n$ at a singularity",
        "$m>n$ for a redundant robot"],
      "answer":1,
      "feedback":[null,
            "(m is the number of task dimensions.)",
            null,
            null]
    },
    { "type":"multiple-choice",
      "prompt":"What situation could cause column j of a Jacobian matrix to be all zeros?",
      "options":["The end effector point is located directly on the line of joint j's axis When rotating about joint j the arm might still move, but the end effector point stays still.",
        "The task space describes a point on a link that is an ancestor of joint j (closer to the link) If the task space point is an ancestor of j, then the movement of joint j does not affect it.",
        "The task space describes a point on a link that isn't on the branch from the root to joint j (e.g., the point is on the left hand and j is on the right arm). If joint j is on a different branch, then its movement does not affect the task space point.",
        "All of the above"],
      "answer":3,
      "randomize":false
    },
    { "type":"multiple-choice",
      "prompt":"A planar 2R robot is at a singularity (with a task space consisting of the robot's end effector position) when:",
      "options":["The number of IK solutions would change if the target were perturbed slightly",
                 "The Jacobian matrix has rank 1",
                 "Its elbow is straight",
                 "All of the above"],
      "answer":3,
      "randomize":false
    },
    { "type":"multiple-choice",
      "prompt":"How can you tell if a robot is at a singular configuration (with respect to a given task space)?",
      "options":["It meets joint limits for at least one joint.",
          "Two or more of its joint axes become parallel.",
          "The task Jacobian has the same or fewer rows than columns.",
          "The task Jacobian becomes no longer full rank."],
      "answer":3
    },
    { "type":"multiple-choice",
      "prompt":"Which of the following statements is true about numerical inverse kinematics?",
      "options":["It cannot handle joint limits.",
          "It is unable to handle task spaces that involve orientation.",
          "Its performance depends on the initial seed configuration.",
          "Its use has been surpassed by analytical inverse kinematics in modern robotics."],
      "answer":2,
      "feedback":["Joint limits can be handled using inequality constraints.",
              "One of its strengths is to handle arbitrary task spaces",
              null,
              "Analytical techniques were dominant decades ago due to limited processing power, but as CPUs grew in power numerical methods became much more viable."]
    },
    { "type":"freeform",
      "prompt":"Consider the problem of solving for a collision-free IK solution. One potential approach would be to solve for a solution (with numerical IK, for example) and if successful, check collision with the robot at the given configuration. If the robot is in collision, return failure. What is the primary drawback of this approach?",
      "answer":"The main issue with this procedure is that it may incorrectly return failure, where there does exist a collision-free IK solution but the procedure does not find it.  There may be several solutions to an IK problem, some of which may be collision free, and some of which may be in collision.  If the first step chooses the "wrong" solution by some chance, then it will fail the collision check and reporting failure will be incorrect.  Instead, a correct method would check all solutions (if a finite number of solutions exist) or continue searching for collision free solutions if the first one fails, e.g., using random restarts."
    }
]